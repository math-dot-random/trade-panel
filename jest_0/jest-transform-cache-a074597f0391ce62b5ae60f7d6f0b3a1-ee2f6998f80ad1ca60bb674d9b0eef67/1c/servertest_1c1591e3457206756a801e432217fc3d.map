{"version":3,"sources":["server.test.js"],"names":["request","require","port","describe","it","err","_res","body","console","response","JSON","parse","expect","length","toBe","price","not","toBeNaN"],"mappings":";;AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,IAAI,GAAG,IAAb;AAEAC,QAAQ,CAAC,qBAAD,EAAwB,MAAM;AACpCC,EAAAA,EAAE,CAAC,iEAAD,EAAoE,MAAM;AAC1E;AACAJ,IAAAA,OAAO,CAAE,oBAAmBE,IAAK,wBAA1B,EAAmD,CAACG,GAAD,EAAMC,IAAN,EAAYC,IAAZ,KAAqB;AAC7E,UAAIF,GAAJ,EAAS;AACP,eAAOG,OAAO,CAACH,GAAR,CAAYA,GAAZ,CAAP;AACD;;AACD,UAAII,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAf;AACAK,MAAAA,MAAM,CAACH,QAAQ,CAACI,MAAV,CAAN,CAAwBC,IAAxB,CAA6B,CAA7B;AACAF,MAAAA,MAAM,CAACH,QAAQ,CAAC,CAAD,CAAR,CAAYM,KAAb,CAAN,CAA0BC,GAA1B,CAA8BC,OAA9B;AACD,KAPM,CAAP;AAQD,GAVC,CAAF;AAWD,CAZO,CAAR","sourcesContent":["const request = require('request');\nconst port = 3001;\n\ndescribe('Server API behavior', () => {\n  it('should respond with price data from database upon a GET request', () => {\n    // Make request to API\n    request(`http://localhost:${port}/api/stocks/GOOG/price`, (err, _res, body) => {\n      if (err) {\n        return console.err(err);\n      }\n      let response = JSON.parse(body);\n      expect(response.length).toBe(1);\n      expect(response[0].price).not.toBeNaN();\n    });\n  });\n});"]}